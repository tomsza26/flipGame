{"version":3,"sources":["components/FlipStart.js","App.js","serviceWorker.js","index.js"],"names":["FlipStart","useState","animF","setAnimF","animI","setAnimI","animP","setAnimP","numDiv","setnumDiv","timer","setTimer","fullTime","setFullTime","f","setF","l","setL","i","setI","p","setP","active","tempId","tempLoc","tempLoc2","tempLoc3","gameProgress","toDel","esc","pause","game","lvl","indents","iconsLvl","timing","tempTimer","shuffle","a","length","j","Math","floor","random","icons","faCoffee","faAmbulance","faAngry","faAirFreshener","faAsterisk","faAt","faAtom","faAward","faBacon","faBahai","faBalanceScale","faBatteryFull","faBaseballBall","faBed","faBeer","faBiohazard","faBox","faBreadSlice","faBug","faCalendar","faCannabis","faChessKing","faChurch","faCode","faCoins","faCross","faCrown","faCubes","faDragon","faFireAlt","faFrog","faSpider","iconsRandom","slice","concat","push","className","key","id","onClick","e","tryCard","icon","document","getElementById","style","gridTemplateColumns","gridTemplateRows","letsGo","setInterval","clearInterval","opacity","display","removeEventListener","handleKeyDown","setTimeout","addEventListener","cardId","target","visibility","event","Fragment","ProgressBar","now","max","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4441163f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport {\r\n\tfaCoffee,\r\n\tfaAmbulance,\r\n\tfaAngry,\r\n\tfaAirFreshener,\r\n\tfaAsterisk,\r\n\tfaAt,\r\n\tfaAtom,\r\n\tfaAward,\r\n\tfaBacon,\r\n\tfaBahai,\r\n\tfaBalanceScale,\r\n\tfaBatteryFull,\r\n\tfaBaseballBall,\r\n\tfaBed,\r\n\tfaBeer,\r\n\tfaBiohazard,\r\n\tfaBox,\r\n\tfaBreadSlice,\r\n\tfaBug,\r\n\tfaCalendar,\r\n\tfaCannabis,\r\n\tfaChessKing,\r\n\tfaChurch,\r\n\tfaCode,\r\n\tfaCoins,\r\n\tfaCross,\r\n\tfaCrown,\r\n\tfaCubes,\r\n\tfaDragon,\r\n\tfaFireAlt,\r\n\tfaFrog,\r\n\tfaSpider\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction FlipStart() {\r\n\tconst [ animF, setAnimF ] = useState(0);\r\n\tconst [ animI, setAnimI ] = useState(0);\r\n\tconst [ animP, setAnimP ] = useState(0);\r\n\tconst [ numDiv, setnumDiv ] = useState(0);\r\n\tconst [ timer, setTimer ] = useState(0);\r\n\tconst [ fullTime, setFullTime ] = useState(0);\r\n\tconst [ f, setF ] = useState('F');\r\n\tconst [ l, setL ] = useState('L');\r\n\tconst [ i, setI ] = useState('I');\r\n\tconst [ p, setP ] = useState('P');\r\n\r\n\tlet active = 0;\r\n\tlet tempId = null;\r\n\tlet tempLoc = 'testing';\r\n\tlet tempLoc2 = 'testing';\r\n\tlet tempLoc3 = null;\r\n\tlet gameProgress = null;\r\n\tlet toDel = null;\r\n\tlet esc = 0;\r\n\tlet pause = 0;\r\n\r\n\tconst game = (lvl) => {\r\n\t\tlet indents = [];\r\n\t\tlet iconsLvl = lvl / 2;\r\n\t\tlet timing = 0;\r\n\t\tlet tempTimer = 0;\r\n\t\tgameProgress = iconsLvl;\r\n\r\n\t\tconst shuffle = (a) => {\r\n\t\t\tfor (let i = a.length - 1; i > 0; i--) {\r\n\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\t[ a[i], a[j] ] = [ a[j], a[i] ];\r\n\t\t\t}\r\n\t\t\treturn a;\r\n\t\t};\r\n\r\n\t\tlet icons = [\r\n\t\t\tfaCoffee,\r\n\t\t\tfaAmbulance,\r\n\t\t\tfaAngry,\r\n\t\t\tfaAirFreshener,\r\n\t\t\tfaAsterisk,\r\n\t\t\tfaAt,\r\n\t\t\tfaAtom,\r\n\t\t\tfaAward,\r\n\t\t\tfaBacon,\r\n\t\t\tfaBahai,\r\n\t\t\tfaBalanceScale,\r\n\t\t\tfaBatteryFull,\r\n\t\t\tfaBaseballBall,\r\n\t\t\tfaBed,\r\n\t\t\tfaBeer,\r\n\t\t\tfaBiohazard,\r\n\t\t\tfaBox,\r\n\t\t\tfaBreadSlice,\r\n\t\t\tfaBug,\r\n\t\t\tfaCalendar,\r\n\t\t\tfaCannabis,\r\n\t\t\tfaChessKing,\r\n\t\t\tfaChurch,\r\n\t\t\tfaCode,\r\n\t\t\tfaCoins,\r\n\t\t\tfaCross,\r\n\t\t\tfaCrown,\r\n\t\t\tfaCubes,\r\n\t\t\tfaDragon,\r\n\t\t\tfaFireAlt,\r\n\t\t\tfaFrog,\r\n\t\t\tfaSpider\r\n\t\t];\r\n\r\n\t\ticons = shuffle(icons);\r\n\t\tlet iconsRandom = icons.slice(0, iconsLvl);\r\n\t\ticonsRandom = iconsRandom.concat(iconsRandom);\r\n\r\n\t\tfor (let i = 0; i < lvl; i++) {\r\n\t\t\tif (i < iconsLvl) {\r\n\t\t\t\tindents.push(\r\n\t\t\t\t\t<div className=\"indent\" key={i} id={i} onClick={(e) => tryCard(e, i + iconsLvl, iconsLvl)}>\r\n\t\t\t\t\t\t<div className=\"frontCard\" />\r\n\t\t\t\t\t\t<div className=\"backCard\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={iconsRandom[i]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tindents.push(\r\n\t\t\t\t\t<div className=\"indent\" key={i} id={i} onClick={(e) => tryCard(e, i, iconsLvl)}>\r\n\t\t\t\t\t\t<div className=\"frontCard\" />\r\n\t\t\t\t\t\t<div className=\"backCard\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={iconsRandom[i]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (lvl === 16) {\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateColumns = 'repeat(4, 1fr)';\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateRows = 'repeat(4, 1fr)';\r\n\t\t\ttempTimer = 32000;\r\n\t\t} else if (lvl === 36) {\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateColumns = 'repeat(6, 1fr)';\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateRows = 'repeat(6, 1fr)';\r\n\t\t\ttempTimer = 90000;\r\n\t\t} else if (lvl === 64) {\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateColumns = 'repeat(8, 1fr)';\r\n\t\t\tdocument.getElementById('gameSelector').style.gridTemplateRows = 'repeat(8, 1fr)';\r\n\t\t\ttempTimer = 192000;\r\n\t\t}\r\n\r\n\t\tsetFullTime(tempTimer);\r\n\r\n\t\tlet letsGo = setInterval(() => {\r\n\t\t\tif (gameProgress === 0) {\r\n\t\t\t\tclearInterval(letsGo);\r\n\t\t\t\tdocument.getElementById('flipCenter').style.opacity = 1;\r\n\t\t\t\tdocument.getElementById('gameActive').id = 'game';\r\n\t\t\t\tdocument.getElementById('paused').style.display = 'none';\r\n\t\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\r\n\t\t\t\tsetTimer(0);\r\n\t\t\t\tsetFullTime(0);\r\n\t\t\t\tsetnumDiv(0);\r\n\t\t\t\ttiming = 0;\r\n\t\t\t\tgameProgress = null;\r\n\t\t\t\tif (esc === 1) {\r\n\t\t\t\t\tsetF('F');\r\n\t\t\t\t\tsetL('L');\r\n\t\t\t\t\tsetI('I');\r\n\t\t\t\t\tsetP('P');\r\n\t\t\t\t\tesc = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetF('N');\r\n\t\t\t\t\tsetL('I');\r\n\t\t\t\t\tsetI('C');\r\n\t\t\t\t\tsetP('E');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (timing === tempTimer) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tclearInterval(letsGo);\r\n\t\t\t\t\tdocument.getElementById('flipCenter').style.opacity = 1;\r\n\t\t\t\t\tdocument.getElementById('gameActive').id = 'game';\r\n\t\t\t\t\tdocument.getElementById('paused').style.display = 'none';\r\n\t\t\t\t\tsetTimer(0);\r\n\t\t\t\t\tsetFullTime(0);\r\n\t\t\t\t\tsetF('F');\r\n\t\t\t\t\tsetL('A');\r\n\t\t\t\t\tsetI('I');\r\n\t\t\t\t\tsetP('L');\r\n\t\t\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\r\n\t\t\t\t}, 2000);\r\n\t\t\t}\r\n\t\t\tif (pause === 0) {\r\n\t\t\t\ttiming += 500;\r\n\t\t\t\tsetTimer(timing);\r\n\t\t\t}\r\n\t\t}, 500);\r\n\r\n\t\tindents = shuffle(indents);\r\n\t\tsetnumDiv(indents);\r\n\t\tdocument.getElementById('flipCenter').style.opacity = 0;\r\n\t\tsetAnimP(0);\r\n\t\tdocument.getElementById('game').id = 'gameActive';\r\n\t\tdocument.addEventListener('keydown', handleKeyDown);\r\n\t};\r\n\r\n\tconst tryCard = (e, cardId, lvl) => {\r\n\t\tif (e.target.className === 'indent') {\r\n\t\t\te.target.className = 'indentAnim';\r\n\t\t\tif (active === 0) {\r\n\t\t\t\tactive = 1;\r\n\t\t\t\tdocument.getElementById(tempLoc).className = 'indent';\r\n\t\t\t\tdocument.getElementById(tempLoc2).className = 'indent';\r\n\t\t\t\ttempId = cardId;\r\n\t\t\t\ttempLoc = e.target.id;\r\n\t\t\t} else {\r\n\t\t\t\ttempLoc2 = e.target.id;\r\n\t\t\t\tif (tempLoc2 !== tempLoc) {\r\n\t\t\t\t\te.target.className = 'indentAnim';\r\n\t\t\t\t\tif (tempId === cardId) {\r\n\t\t\t\t\t\ttoDel = tempId;\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tdocument.getElementById(toDel).style.visibility = 'hidden';\r\n\t\t\t\t\t\t\tdocument.getElementById(toDel - lvl).style.visibility = 'hidden';\r\n\t\t\t\t\t\t\tgameProgress -= 1;\r\n\t\t\t\t\t\t}, 200);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempLoc3 = tempLoc;\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tdocument.getElementById(tempLoc2).className = 'indent';\r\n\t\t\t\t\t\t\tdocument.getElementById(tempLoc3).className = 'indent';\r\n\t\t\t\t\t\t}, 500);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactive = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (active === 1 && document.getElementById(tempLoc).className === 'indent') {\r\n\t\t\t\tdocument.getElementById(tempLoc).className = 'indentAnim';\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleKeyDown = (event) => {\r\n\t\tif (event.key === 'p') {\r\n\t\t\tif (pause === 0) {\r\n\t\t\t\tdocument.getElementById('paused').style.display = 'flex';\r\n\t\t\t\tpause = 1;\r\n\t\t\t} else {\r\n\t\t\t\tdocument.getElementById('paused').style.display = 'none';\r\n\t\t\t\tpause = 0;\r\n\t\t\t}\r\n\t\t} else if (event.key === 'Escape') {\r\n\t\t\tesc = 1;\r\n\t\t\tgameProgress = 0;\r\n\t\t\tsetF('F');\r\n\t\t\tsetL('L');\r\n\t\t\tsetI('I');\r\n\t\t\tsetP('P');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div id=\"flipCenter\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"letter\"\r\n\t\t\t\t\tid={animF ? 'fAnim' : 'f'}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetAnimI(0);\r\n\t\t\t\t\t\tsetAnimP(0);\r\n\t\t\t\t\t\tanimF === 1 ? setAnimF(0) : setAnimF(1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"front\">{f}</div>\r\n\t\t\t\t\t<div className=\"back\">Alpha version</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"letter\" id={animF ? 'lAnim' : 'l'}>\r\n\t\t\t\t\t{l}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"letter\"\r\n\t\t\t\t\tid={animI === 1 ? 'iAnim' : 'i'}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetAnimF(0);\r\n\t\t\t\t\t\tsetAnimP(0);\r\n\t\t\t\t\t\tanimI === 1 ? setAnimI(0) : setAnimI(1);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"front\">{i}</div>\r\n\t\t\t\t\t<div className=\"back\" id=\"iback\">\r\n\t\t\t\t\t\t<p id=\"pIns\" className=\"ibacked\">\r\n\t\t\t\t\t\t\tInstructions\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"ibacked\">Press [p] to pause, or [ESC] to abandon game.</p>\r\n\t\t\t\t\t\t<p className=\"ibacked\">\r\n\t\t\t\t\t\t\tFlip is a timed card memory game. Click the green cards to see what symbol they uncover and\r\n\t\t\t\t\t\t\ttry to find the matching symbol underneath the other cards.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"ibacked\">Uncover two matching symbols at once to eliminate them from the game.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"letter\"\r\n\t\t\t\t\tid={\r\n\t\t\t\t\t\tanimI && !document.getElementById('pAnimation') ? (\r\n\t\t\t\t\t\t\t'pAnim'\r\n\t\t\t\t\t\t) : animP ? (\r\n\t\t\t\t\t\t\t'pAnimation'\r\n\t\t\t\t\t\t) : animI ? (\r\n\t\t\t\t\t\t\t'pAnimation'\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t'p'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (animP === 0) {\r\n\t\t\t\t\t\t\tsetAnimF(0);\r\n\t\t\t\t\t\t\tsetAnimI(0);\r\n\t\t\t\t\t\t\tanimP === 1 ? setAnimP(0) : setAnimP(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"front\">{p}</div>\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t\t<p className=\"level\" onClick={() => game(16)}>\r\n\t\t\t\t\t\t\tEASY\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"level\" onClick={() => game(36)}>\r\n\t\t\t\t\t\t\tMEDIUM\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"level\" onClick={() => game(64)}>\r\n\t\t\t\t\t\t\tHARD\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"testing\" />\r\n\t\t\t<div id=\"paused\" />\r\n\t\t\t<div id=\"game\">\r\n\t\t\t\t{<ProgressBar now={timer} max={fullTime} />}\r\n\t\t\t\t<div className=\"gameInside\" id=\"gameSelector\">\r\n\t\t\t\t\t{numDiv}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default FlipStart;\r\n","import React from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FlipStart from './components/FlipStart';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\" id=\"helloSir\">\n\t\t\t<FlipStart />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}